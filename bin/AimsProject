#!/usr/bin/env ruby
require 'aims_project'
require 'fileutils'
# Initialize an AimsProject
# Create a directory named by the project
# and generate the AimsProjectInfo.yaml file 

projectName = ARGV[0]
projectDir = projectName

if project = AimsProject::Project.create(projectName)
  
  STDOUT.puts "Creating #{projectDir}..."
  
  # save the project into a directory named after the project
  project.save(projectDir)
  
  # Copy the skeleton directory tasks into config
  dir = File.dirname(File.expand_path(__FILE__))
  FileUtils.cp_r(File.join(dir, '..', 'skeleton', '.'), projectDir)
  
  
  # Generate the default Capfile
  capfile = ""
  File.open(File.join(projectDir, "Capfile"), 'r') do |capfile_template|
    capfile_template.each_line do |line|
      line.sub!(/__PROJECT_DIR__/, projectDir)
      line.sub!(/__PROJECT_NAME__/, projectName)
      capfile << line
    end
  end
  
  File.open(File.join(projectDir, "Capfile"), 'w') do |f|
    f.puts capfile
  end
  
  STDOUT.puts <<-EOL
  
  Done creating the aims project #{projectName}. Here are the steps to get started.
  1) Customize the variables in #{File.join(projectDir, "Capfile")}
  2) Add geometry files to the directory #{File.join(projectDir, AimsProject::GEOMETRY_DIR)}
  3) Add control files to the directory #{File.join(projectDir, AimsProject::CONTROL_DIR)}
  4) Generate a calculation with the command:
      AimsCalc create [geometry] [control]
  5) Execute the calculations with the command:
      cap aims:enqueue
  EOL
  
else 
  STDERR.puts "Error creating project."
  STDERR.puts $!.message
end